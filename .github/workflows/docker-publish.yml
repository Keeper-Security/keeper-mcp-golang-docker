name: Docker Build and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (e.g., v1.0.0, latest, dev)'
        required: true
        default: 'latest'

env:
  REGISTRY: docker.io
  IMAGE_NAME: keepersecurityinc/ksm-mcp-poc

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: poc
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Extract version from code
        id: code_version
        run: |
          # Extract version from cmd/ksm-mcp/main.go
          VERSION=$(grep -E 'const Version = "v[0-9]+\.[0-9]+\.[0-9]+"' cmd/ksm-mcp/main.go | cut -d'"' -f2)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Code version: ${VERSION}"

      - name: Determine Docker tags
        id: meta
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Manual trigger
            TAG="${{ github.event.inputs.tag }}"
            echo "tags=${{ env.IMAGE_NAME }}:${TAG}" >> $GITHUB_OUTPUT
            echo "version=${TAG}" >> $GITHUB_OUTPUT
          else
            # Tag push trigger
            TAG="${GITHUB_REF#refs/tags/}"
            echo "tags=${{ env.IMAGE_NAME }}:${TAG},${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
            echo "version=${TAG}" >> $GITHUB_OUTPUT
          fi

      - name: Validate version match (for tag pushes)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION="${{ steps.meta.outputs.version }}"
          CODE_VERSION="${{ steps.code_version.outputs.version }}"
          
          echo "Tag version: ${TAG_VERSION}"
          echo "Code version: ${CODE_VERSION}"
          
          if [ "${TAG_VERSION}" != "${CODE_VERSION}" ]; then
            echo "❌ ERROR: Git tag (${TAG_VERSION}) does not match code version (${CODE_VERSION})"
            echo "Please update the version in cmd/ksm-mcp/main.go to match the tag"
            exit 1
          fi
          
          echo "✅ Version validation passed"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}

      - name: Summary
        run: |
          echo "## Docker Image Published 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:** \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pull Commands" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n'); do
            echo "docker pull ${tag}" >> $GITHUB_STEP_SUMMARY
          done
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY